<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bruceeezhao.github.io/"/>
  <updated>2019-11-26T01:16:17.578Z</updated>
  <id>https://bruceeezhao.github.io/</id>
  
  <author>
    <name>bruce zhao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ruby on rails环境搭建</title>
    <link href="https://bruceeezhao.github.io/2019/11/25/ruby-on-rails%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://bruceeezhao.github.io/2019/11/25/ruby-on-rails环境搭建/</id>
    <published>2019-11-25T06:23:42.000Z</published>
    <updated>2019-11-26T01:16:17.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装ruby"><a href="#安装ruby" class="headerlink" title="安装ruby"></a>安装ruby</h1><p>ruby 存在很多版本，不同的项目可能会使用不同版本的ruby，不同的版本往往有很多不同的依赖使得项目不能运行，因此我们应该考虑到在计算机上管理多个不同版本的ruby。这里我们选用rvm作为ruby的版本管理软件。</p><a id="more"></a><h2 id="安装rvm"><a href="#安装rvm" class="headerlink" title="安装rvm"></a>安装rvm</h2><ul><li><p>install GPG keys</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</span><br></pre></td></tr></table></figure></li><li><p>install RVM </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ \curl -sSL https://get.rvm.io | bash -s stable</span><br></pre></td></tr></table></figure></li></ul><p>修改shell为login shell<br>Edit–&gt;Profile Preference–&gt;Command</p><p><img src="//bruceeezhao.github.io/2019/11/25/ruby-on-rails环境搭建/run_command_as_login.png" alt="本地图片"></p><h2 id="使用rvm管理ruby版本"><a href="#使用rvm管理ruby版本" class="headerlink" title="使用rvm管理ruby版本"></a>使用rvm管理ruby版本</h2><p>在终端中输入  rvm list known 你将会看到如下输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ rvm list known</span><br><span class="line"># MRI Rubies</span><br><span class="line">[ruby-]1.8.6[-p420]</span><br><span class="line">[ruby-]1.8.7[-head] # security released on head</span><br><span class="line">[ruby-]1.9.1[-p431]</span><br><span class="line">[ruby-]1.9.2[-p330]</span><br><span class="line">[ruby-]1.9.3[-p551]</span><br><span class="line">[ruby-]2.0.0[-p648]</span><br><span class="line">[ruby-]2.1[.10]</span><br><span class="line">[ruby-]2.2[.10]</span><br><span class="line">[ruby-]2.3[.8]</span><br><span class="line">[ruby-]2.4[.6]</span><br><span class="line">[ruby-]2.5[.5]</span><br><span class="line">[ruby-]2.6[.3]</span><br><span class="line">[ruby-]2.7[.0-preview1]</span><br><span class="line">ruby-head</span><br></pre></td></tr></table></figure><p>上面的信息告诉你有哪些版本是可用的，下面你可以选择你需要的版本进行下载：<br>例如你需要2.3版本的ruby，输入如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rvm install 2.3</span><br></pre></td></tr></table></figure><p>使用 <strong>rvm list</strong> 命令可以看出你已经安装的ruby版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ rvm list </span><br><span class="line">=* ruby-2.3.8 [ x86_64 ]</span><br><span class="line">   ruby-2.6.3 [ x86_64 ]</span><br><span class="line"></span><br><span class="line"># =&gt; - current</span><br><span class="line"># =* - current &amp;&amp; default</span><br><span class="line">#  * - default</span><br></pre></td></tr></table></figure><p>上面的信息说明在我的系统中安装了2.3 和 2.6 两个版本，当前使用的是2.3版本，且是默认版本。 </p><p>如果我想使用2.6的版本我需要做什么呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ rvm use 2.6</span><br><span class="line">Using /home/bruce/.rvm/gems/ruby-2.6.3</span><br><span class="line">$ rvm list</span><br><span class="line"> * ruby-2.3.8 [ x86_64 ]</span><br><span class="line">=&gt; ruby-2.6.3 [ x86_64 ]</span><br><span class="line"></span><br><span class="line"># =&gt; - current</span><br><span class="line"># =* - current &amp;&amp; default</span><br><span class="line">#  * - default</span><br><span class="line"></span><br><span class="line">$ ruby -v</span><br><span class="line">ruby 2.6.3p62 (2019-04-16 revision 67580) [x86_64-linux]</span><br></pre></td></tr></table></figure><p>可以看到我们已经切换到2.6版本了。<br>更多rvm操作 <a href="http://rvm.io/rvm" target="_blank" rel="noopener">http://rvm.io/rvm</a></p><h2 id="使用gemset"><a href="#使用gemset" class="headerlink" title="使用gemset"></a>使用gemset</h2><p>gemset 为gem安装的插件提供一个独立的空间，可以创建多个gemset以满足不同项目的需求，减少不同项目之间的依赖冲突。</p><ul><li><p>创建gemset</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rvm gemset create rails2.6</span><br></pre></td></tr></table></figure></li><li><p>使用创建的gemset</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rvm use 2.6@rails2.6</span><br><span class="line">Using /home/bruce/.rvm/gems/ruby-2.6.3 with gemset rails2.6</span><br></pre></td></tr></table></figure></li><li><p>列出系统内gemset</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ rvm gemset list</span><br><span class="line"></span><br><span class="line">gemsets for ruby-2.6.3 (found in /home/bruce/.rvm/gems/ruby-2.6.3)</span><br><span class="line">   (default)</span><br><span class="line">   global</span><br><span class="line">=&gt; rails2.6</span><br></pre></td></tr></table></figure></li></ul><p>更多gemset操作： <a href="http://rvm.io/gemsets" target="_blank" rel="noopener">http://rvm.io/gemsets</a></p><h1 id="更换源"><a href="#更换源" class="headerlink" title="更换源"></a>更换源</h1><h2 id="gem-更换国内源"><a href="#gem-更换国内源" class="headerlink" title="gem 更换国内源"></a>gem 更换国内源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/</span><br><span class="line"><span class="meta">$</span> gem sources -l</span><br><span class="line">https://gems.ruby-china.com</span><br><span class="line"><span class="meta">#</span> 确保只有 gems.ruby-china.com</span><br></pre></td></tr></table></figure><p>bundle </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> bundle config mirror.https://rubygems.org https://gems.ruby-china.com</span><br></pre></td></tr></table></figure><h1 id="安装yarn"><a href="#安装yarn" class="headerlink" title="安装yarn"></a>安装yarn</h1><p><a href="https://yarn.bootcss.com/docs/install/#debian-stable" target="_blank" rel="noopener">https://yarn.bootcss.com/docs/install/#debian-stable</a></p><p>yarn 更换国内源<br>yarn config set registry <a href="https://registry.npm.taobao.org/" target="_blank" rel="noopener">https://registry.npm.taobao.org/</a></p><h1 id="安装rails"><a href="#安装rails" class="headerlink" title="安装rails"></a>安装rails</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gem install rails</span><br></pre></td></tr></table></figure><h1 id="ruby-交互式编程"><a href="#ruby-交互式编程" class="headerlink" title="ruby 交互式编程"></a>ruby 交互式编程</h1><p>irb 是ruby自带的交互式变成工具<br>pry 的体验要好与irb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gem install pry</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装ruby&quot;&gt;&lt;a href=&quot;#安装ruby&quot; class=&quot;headerlink&quot; title=&quot;安装ruby&quot;&gt;&lt;/a&gt;安装ruby&lt;/h1&gt;&lt;p&gt;ruby 存在很多版本，不同的项目可能会使用不同版本的ruby，不同的版本往往有很多不同的依赖使得项目不能运行，因此我们应该考虑到在计算机上管理多个不同版本的ruby。这里我们选用rvm作为ruby的版本管理软件。&lt;/p&gt;
    
    </summary>
    
      <category term="ruby" scheme="https://bruceeezhao.github.io/categories/ruby/"/>
    
    
      <category term="ruby" scheme="https://bruceeezhao.github.io/tags/ruby/"/>
    
  </entry>
  
  <entry>
    <title>Python操作Access数据库</title>
    <link href="https://bruceeezhao.github.io/2019/06/05/Python%E6%93%8D%E4%BD%9CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://bruceeezhao.github.io/2019/06/05/Python操作Access数据库/</id>
    <published>2019-06-05T14:00:17.000Z</published>
    <updated>2019-11-25T07:18:57.006Z</updated>
    
    <content type="html"><![CDATA[<p>说明：建立两个连接是因为，只使用一个连接时会出现以下错误：<br>[24000] [Microsoft][ODBC Microsoft Access Driver]Invalid cursor state  (43) (SQLExecDirectW)  </p><a id="more"></a><h2 id="例程1"><a href="#例程1" class="headerlink" title="例程1"></a>例程1</h2><p>以下是测试代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyodbc</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DBfile = <span class="string">r"C:\Users\eagle\Desktop\Database21.accdb"</span>  <span class="comment"># 数据库文件</span></span><br><span class="line">conn = pyodbc.connect(<span class="string">r"Driver=&#123;Microsoft Access Driver (*.mdb, *.accdb)&#125;;DBQ="</span> + DBfile + <span class="string">";Uid=;Pwd=;"</span>)</span><br><span class="line">conn1 = pyodbc.connect(<span class="string">r"Driver=&#123;Microsoft Access Driver (*.mdb, *.accdb)&#125;;DBQ="</span> + DBfile + <span class="string">";Uid=;Pwd=;"</span>) </span><br><span class="line">cursor = conn.cursor()</span><br><span class="line">cursor1 = conn1.cursor()</span><br><span class="line"></span><br><span class="line">TABLE = <span class="string">'xuesheng'</span></span><br><span class="line"></span><br><span class="line">SQL = <span class="string">"delete * from %s;"</span> % TABLE</span><br><span class="line">cursor.execute(SQL)</span><br><span class="line">cursor.commit()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">()</span>:</span></span><br><span class="line">    name_base = <span class="string">'zhang'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100000</span>):</span><br><span class="line">        ID = i</span><br><span class="line">        name = name_base + str(i)</span><br><span class="line">        age = random.randint(<span class="number">20</span>,<span class="number">26</span>)</span><br><span class="line">        sex = <span class="string">'fmale'</span> <span class="keyword">if</span> (age % <span class="number">2</span>) == <span class="number">0</span>  <span class="keyword">else</span> <span class="string">'male'</span> </span><br><span class="line">        chinese = random.randint(<span class="number">0</span>,<span class="number">100</span>)</span><br><span class="line">        eng = random.randint(<span class="number">0</span>,<span class="number">100</span>)</span><br><span class="line">        math = random.randint(<span class="number">0</span>,<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">        SQL = <span class="string">"insert into %s values(%d, '%s', %d, '%s', %d, %d, %d) ;"</span> \</span><br><span class="line">            % (TABLE, ID, name, age, sex, chinese, eng, math)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cursor1.execute(SQL)</span><br><span class="line">            cursor1.commit()</span><br><span class="line">            <span class="comment">#print(SQL)</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">'write ERROR: %s'</span> %e)</span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">        SQL = <span class="string">"SELECT * from %s;"</span> % TABLE</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cursor.execute(SQL)</span><br><span class="line">            <span class="comment">#for row in cursor.execute(SQL):</span></span><br><span class="line">                <span class="comment">#print (row)</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">'read ERROR:%s'</span> %e)</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        </span><br><span class="line">w = threading.Thread(target=write,args=())</span><br><span class="line">w.setDaemon(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">r = threading.Thread(target=read,args=())</span><br><span class="line">r.setDaemon(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">w.start()</span><br><span class="line">r.start()</span><br><span class="line"></span><br><span class="line">w.join()</span><br><span class="line">r.join()</span><br><span class="line"></span><br><span class="line">SQL = <span class="string">"select count(*) from %s;"</span> % TABLE</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> cursor.execute(SQL):</span><br><span class="line">    print(row)</span><br><span class="line"></span><br><span class="line">cursor.commit()</span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br><span class="line">conn1.close()</span><br></pre></td></tr></table></figure><h2 id="例程2"><a href="#例程2" class="headerlink" title="例程2"></a>例程2</h2><p>该例程完成access数据库的复制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyodbc</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> getopt</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">logging.basicConfig(level=logging.DEBUG,</span><br><span class="line">                format=<span class="string">'%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s'</span>,</span><br><span class="line">                datefmt=<span class="string">'%a, %d %b %Y %H:%M:%S'</span>,</span><br><span class="line">                filename=<span class="string">'access_copy.log'</span>,</span><br><span class="line">                filemode=<span class="string">'a'</span>)</span><br><span class="line"></span><br><span class="line">SourceDatabase = <span class="literal">None</span></span><br><span class="line">SourceTable = <span class="literal">None</span></span><br><span class="line">DestDatabase = <span class="literal">None</span></span><br><span class="line">DestTable = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># connection and cursor</span></span><br><span class="line">conn_s = <span class="literal">None</span></span><br><span class="line">cursor_s = <span class="literal">None</span></span><br><span class="line">conn_d = <span class="literal">None</span></span><br><span class="line">cursor_d = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(row)</span>:</span></span><br><span class="line">    error = <span class="number">0</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        SQL = <span class="string">"insert into %s values %s"</span> \</span><br><span class="line">            %(DestTable, row)</span><br><span class="line">        logging.info(SQL)</span><br><span class="line">        cursor_d.execute(SQL)</span><br><span class="line">        cursor_d.commit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> re.search(<span class="string">'duplicate data'</span>, e):</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.error(<span class="string">"write to %s error: %s"</span> %(DestTable, e))</span><br><span class="line">            error = <span class="number">1</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">return</span> error</span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(line)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        SQL = <span class="string">"SELECT top %d * from %s;"</span> % (line, SourceTable)</span><br><span class="line">        logging.info(SQL)</span><br><span class="line">        rows = cursor_s.execute(SQL).fetchall()</span><br><span class="line">        <span class="keyword">return</span> rows</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        logging.error(<span class="string">'read from %s error: %s'</span>%(SourceTable, e))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#count the dest table,decide the place begin to copy</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_s</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        SQL = <span class="string">"SELECT count(*) from %s;"</span> % SourceTable</span><br><span class="line">        lines = cursor_s.execute(SQL).fetchone()</span><br><span class="line">        logging.info(<span class="string">'%s %s count is %d'</span> %(SourceDatabase, SourceTable, lines[<span class="number">0</span>]))</span><br><span class="line">        <span class="keyword">return</span> lines</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        logging.error(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_d</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        SQL = <span class="string">"SELECT count(*) from %s;"</span> % DestTable</span><br><span class="line">        lines = cursor_d.execute(SQL).fetchone()</span><br><span class="line">        logging.info(<span class="string">'%s %s count is %d'</span> %(DestDatabase, DestTable, lines[<span class="number">0</span>]))</span><br><span class="line">        <span class="keyword">return</span> lines</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        logging.error(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">databaseCopy</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> conn_s</span><br><span class="line">    <span class="keyword">global</span> conn_d</span><br><span class="line">    <span class="keyword">global</span> cursor_s</span><br><span class="line">    <span class="keyword">global</span> cursor_d</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        conn_s = pyodbc.connect(<span class="string">r"Driver=&#123;Microsoft Access Driver (*.mdb, *.accdb)&#125;;DBQ="</span> + SourceDatabase + <span class="string">";Uid=;Pwd=;"</span>)</span><br><span class="line">        conn_d = pyodbc.connect(<span class="string">r"Driver=&#123;Microsoft Access Driver (*.mdb, *.accdb)&#125;;DBQ="</span> + DestDatabase + <span class="string">";Uid=;Pwd=;"</span>) </span><br><span class="line">        cursor_s = conn_s.cursor()</span><br><span class="line">        cursor_d = conn_d.cursor()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        lines_s = count_s()</span><br><span class="line">        <span class="keyword">if</span>(lines_s == <span class="literal">None</span>):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        lines_d = count_d()</span><br><span class="line">        <span class="keyword">if</span>(lines_d == <span class="literal">None</span>):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        rows = read(lines_s[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span>(rows == <span class="literal">None</span>):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lines_s == lines_d):</span><br><span class="line">            logging.info(<span class="string">'source database %s table %s not change, no need to copy'</span> %(SourceDatabase ,SourceTable))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.info(<span class="string">'rows: %d'</span> % len(rows))</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, lines_s[<span class="number">0</span>]<span class="number">-1</span>):</span><br><span class="line">                error = write(rows[i])</span><br><span class="line">                <span class="keyword">if</span> error:</span><br><span class="line">                    logging.info(<span class="string">'rows:%d  %s'</span> %(i, rows[i]))</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        logging.error(e)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> SourceDatabase</span><br><span class="line">    <span class="keyword">global</span> SourceTable</span><br><span class="line">    <span class="keyword">global</span> DestDatabase</span><br><span class="line">    <span class="keyword">global</span> DestTable</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        opts, args = getopt.getopt(sys.argv[<span class="number">1</span>:],<span class="string">"h"</span>,[<span class="string">"help"</span>,<span class="string">"sd="</span>,<span class="string">"st="</span>,<span class="string">"dd="</span>, <span class="string">"dt="</span>])</span><br><span class="line">    <span class="keyword">except</span> getopt.GetoptError <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        help()</span><br><span class="line">        sys.exit(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> opt, arg <span class="keyword">in</span> opts:</span><br><span class="line">        <span class="keyword">if</span> opt <span class="keyword">in</span> (<span class="string">'-h'</span>, <span class="string">'--help'</span>):</span><br><span class="line">            help()</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">elif</span> opt == <span class="string">'--sd'</span>:</span><br><span class="line">            SourceDatabase = arg</span><br><span class="line">        <span class="keyword">elif</span> opt == <span class="string">'--st'</span>:</span><br><span class="line">            SourceTable = arg</span><br><span class="line">        <span class="keyword">elif</span> opt == <span class="string">'--dd'</span>:</span><br><span class="line">            DestDatabase = arg</span><br><span class="line">        <span class="keyword">elif</span> opt == <span class="string">'--dt'</span>:</span><br><span class="line">            DestTable = arg</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            print(<span class="string">'error %s %s'</span> %(opt, arg) )</span><br><span class="line">            help()</span><br><span class="line">            sys.exit(<span class="number">2</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (SourceDatabase  <span class="keyword">and</span> SourceTable <span class="keyword">and</span> DestDatabase <span class="keyword">and</span> DestTable):</span><br><span class="line">        databaseCopy()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'some empty %s %s %s %s'</span> % (SourceDatabase, SourceTable, DestDatabase, DestTable))</span><br><span class="line">        help()</span><br><span class="line">        sys.exit(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    count_s()</span><br><span class="line">    count_d()</span><br><span class="line">    conn_s.close()</span><br><span class="line">    conn_d.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">help</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'---------------------------------'</span>)</span><br><span class="line">    print(<span class="string">'usage:'</span>)</span><br><span class="line">    print(<span class="string">'help: %s -h'</span> % sys.argv[<span class="number">0</span>])</span><br><span class="line">    print(<span class="string">'%s --sd=&lt;SourceDatabase&gt; --st=&lt;SourceTable&gt; --dd=&lt;DestDatabase&gt; --dt=&lt;DestTable&gt;'</span> % sys.argv[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>使用方法：<br>可以将下面的代码保存为bat文件，自行替换 –sd –st –dd –dt 的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python access_copy.py --sd=&quot;\\192.168.1.112\Users\eagle\Desktop\Database31.accdb&quot; --st=xuesheng --dd=&quot;C:\Users\eagle\Desktop\Database31.accdb&quot; --dt=xuesheng</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>access数据库的复制支持通过共享文件夹的方式读取远程的数据库。  </li></ul><h2 id="access-数据库的问题："><a href="#access-数据库的问题：" class="headerlink" title="access 数据库的问题："></a>access 数据库的问题：</h2><p>假设程序A对A数据库执行写入操作，程序B读取A数据库中的数据写入B库。  </p><ol><li>如果执行select*那么程序会一直写入，直到A库的写操作完成。</li><li>如果想写入程序执行时A数据库的数据的条数，需加上top限制，但是不能保证读出数据的次序。</li><li>加上 order by 后会死等，直到程序A的写操作完成，B程序才开始执行写操作。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说明：建立两个连接是因为，只使用一个连接时会出现以下错误：&lt;br&gt;[24000] [Microsoft][ODBC Microsoft Access Driver]Invalid cursor state  (43) (SQLExecDirectW)  &lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://bruceeezhao.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://bruceeezhao.github.io/tags/Python/"/>
    
      <category term="Access数据库" scheme="https://bruceeezhao.github.io/tags/Access%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
