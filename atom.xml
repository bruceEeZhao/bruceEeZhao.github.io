<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bruceeezhao.github.io/"/>
  <updated>2020-02-07T12:38:17.919Z</updated>
  <id>https://bruceeezhao.github.io/</id>
  
  <author>
    <name>bruce zhao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>区块链技术与应用-比特币系统</title>
    <link href="https://bruceeezhao.github.io/2020/02/07/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8-%E6%AF%94%E7%89%B9%E5%B8%81%E7%B3%BB%E7%BB%9F/"/>
    <id>https://bruceeezhao.github.io/2020/02/07/区块链技术与应用-比特币系统/</id>
    <published>2020-02-07T08:50:19.000Z</published>
    <updated>2020-02-07T12:38:17.919Z</updated>
    
    <content type="html"><![CDATA[<p>##　密码学原理  </p><h3 id="密码学哈希函数"><a href="#密码学哈希函数" class="headerlink" title="密码学哈希函数"></a>密码学哈希函数</h3><a id="more"></a><p>性质： </p><ol><li><p>collision resistance 很难产生哈希碰撞<br>很难找到一个值 m’ 使得 H(m’) = h(m)</p></li><li><p>hiding 单向<br>x -&gt; H(x)<br>从哈希值h(x)不能反推出x<br>成立前提:输入空间足够大，概率分布较均匀  </p></li></ol><blockquote><p>这两个性质结合可以应用于<br>digital commitment<br>digital equivalent of a sealed envelope</p></blockquote><ol start="3"><li>puzzle friendly 比特币中的哈希函数性质<br>SHA-256<br>difficult to solve,but easy to verify<br>H(block header) &lt;= target</li></ol><h3 id="签名："><a href="#签名：" class="headerlink" title="签名："></a>签名：</h3><p>(public key, private key) 非对称加密体系<br>签名使用私钥，验证使用公钥<br>成立前提：拥有一个好的随机源</p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="哈希指针"><a href="#哈希指针" class="headerlink" title="哈希指针"></a>哈希指针</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p -&gt; ____ &lt;- h()</span><br><span class="line">    |    |</span><br><span class="line">    |    |</span><br><span class="line">    |____|</span><br><span class="line">h() 结构体的哈希值</span><br></pre></td></tr></table></figure><p>Block chain is a linked list using hash pointers.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">区块链示意图</span><br><span class="line">     ____    ____    ____    ____ </span><br><span class="line">    |    |  |    |  |    |  |    |</span><br><span class="line">    |    |&lt;-|    |&lt;-|    |&lt;-|h() | </span><br><span class="line">    |____|  |____|  |____|  |____|</span><br><span class="line">    创世纪块                  最近产生的区块</span><br><span class="line"></span><br><span class="line">根据前一个区块取哈希，若前面的区块发生变化，则哈希值不能对应上，可以发现篡改</span><br></pre></td></tr></table></figure><h3 id="Merkle-tree"><a href="#Merkle-tree" class="headerlink" title="Merkle tree"></a>Merkle tree</h3><p>使用哈希指针的二叉树</p><p>最下面一层是数据块（交易块），上面的节点都是哈希指针。只需保存root hash的值，就可以判断整棵树是否被篡改。  </p><p>每个区块分为两部分： block header ,block body<br>block header:记录root hash<br>block body:记录交易列表<br>轻节点：只保存block header</p><p><img src="//bruceeezhao.github.io/2020/02/07/区块链技术与应用-比特币系统/merkletree.png" alt="merkle tree"></p><p>作用：提供merkle proof<br><img src="//bruceeezhao.github.io/2020/02/07/区块链技术与应用-比特币系统/merkleproof.png" alt="merkle proof"></p><p>某个轻节点想证明交易tx是否在merkle tree中，需要向某个全节点发送请求，全节点将标为红色的哈希值告诉轻节点，轻节点即可验证。</p><p>proof of membership  </p><p>当节点按哈希值大小排序时(sorted merkle tree)，是可以证明 nonmembership 的</p><h2 id="数字货币的问题："><a href="#数字货币的问题：" class="headerlink" title="数字货币的问题："></a>数字货币的问题：</h2><ol><li><p>doble spending attack<br>如果数字货币只有签名，那么货币可能被复制  </p><p>中心化的解决方法，央行记录货币的拥有者，交易时验证货币拥有者的信息</p></li></ol><h3 id="去中心化的数字货币要解决的问题："><a href="#去中心化的数字货币要解决的问题：" class="headerlink" title="去中心化的数字货币要解决的问题："></a>去中心化的数字货币要解决的问题：</h3><ol><li>数字货币的发行</li><li>验证交易的有效性</li></ol><p><img src="//bruceeezhao.github.io/2020/02/07/区块链技术与应用-比特币系统/trans.png" alt="trans"></p><p>交易分为输入和输出：输入包括a的公钥和币的来源，输出部分为接收者的公钥<br>在铸币交易时公布了a的公钥  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">block header</span><br><span class="line"> version</span><br><span class="line"> hash of previous block header</span><br><span class="line"> merkle root hash</span><br><span class="line"> target</span><br><span class="line"> nonce</span><br><span class="line"></span><br><span class="line">block body</span><br><span class="line"> transaction list</span><br></pre></td></tr></table></figure><h3 id="Consensus-in-BitCoin"><a href="#Consensus-in-BitCoin" class="headerlink" title="Consensus in BitCoin"></a>Consensus in BitCoin</h3><h2 id="比特币系统的实现"><a href="#比特币系统的实现" class="headerlink" title="比特币系统的实现"></a>比特币系统的实现</h2><h3 id="基于交易的账本"><a href="#基于交易的账本" class="headerlink" title="基于交易的账本"></a>基于交易的账本</h3><p>比特币系统是基于交易的账本，transaction-based ledger  </p><p>比特币的全节点要维护一个utxo的数据结构：Unspent Transaction Output(未花掉的交易的输出的集合)，可以快速检测double spending  </p><p>total inputs = total outputs</p><h3 id="基于账户的账本"><a href="#基于账户的账本" class="headerlink" title="基于账户的账本"></a>基于账户的账本</h3><p>以太坊采用这种模式<br>account-based ledger</p><h3 id="挖矿"><a href="#挖矿" class="headerlink" title="挖矿"></a>挖矿</h3><p>不断尝试nonce来求解puzzle  </p><p>每次尝试可以看做是一个bernoulli trial:a random experiment with binary outcome  </p><p>berboulli process: a sequence of independent Bernoulli trails  </p><p>性质： memoryless  </p><p>每次的成功概率很小，可以用泊松近似（Poisson process）</p><p>出块时间服从指数分布 x^(-1)  </p><p>比特币的总数为 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">21万*50 + 21万*25 + ....</span><br><span class="line">= 21万 * 50 * (1+1/2+1/4+...) = 2100万</span><br></pre></td></tr></table></figure><p>比特币的稀有性是人为造成的  </p><p>挖矿提供了一种依靠算力投票的有效机制，bitcoin is secured by mining</p><h2 id="比特币网络工作原理"><a href="#比特币网络工作原理" class="headerlink" title="比特币网络工作原理"></a>比特币网络工作原理</h2><p>应用层： bitCoin Block chain<br>网络层： P2P Overlay Network  </p><p>设计原则： simple, robust, but not efficient<br>传播方式： flooding<br>使用 TCP  </p><h3 id="比特币系统挖矿难度的调整"><a href="#比特币系统挖矿难度的调整" class="headerlink" title="比特币系统挖矿难度的调整"></a>比特币系统挖矿难度的调整</h3><p>H(block header) &lt;= target  </p><p>SHA-256  2^256  </p><p>挖矿难度与target成反比<br>difficulty = difficulty_1_target / target  </p><p>比特币系统中规定每隔10分钟出一个区块，每隔2016个区块调整一次难度  </p><p>target = target * [(actual time) / (expected time)]  </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="全节点"><a href="#全节点" class="headerlink" title="全节点"></a>全节点</h3><blockquote><p>一直在线<br>在本地硬盘上维护完整的区块链信息<br>在内存中维护UTXO集合，以便快速验证交易的正确性<br>监听比特币网络上的交易信息，验证每个交易的合法性<br>决定哪些交易会被打包到区块里<br>监听别的矿工挖出来的区块，验证其合法性<br>挖矿</p><ul><li>决定沿着哪条链挖下去</li><li>当出现等长的分叉的时候，选择哪一个分叉</li></ul></blockquote><h3 id="轻节点"><a href="#轻节点" class="headerlink" title="轻节点"></a>轻节点</h3><blockquote><p>不是一直在线<br>不用保存整个区块链，只保存每个区块的块头<br>不用保存全部交易，只保存与自己相关的交易<br>无法检验大多数交易的合法性，只能检验与自己相关的交易的合法性<br>无法检验网上发布的区块的正确性<br>可以验证挖矿的难度<br>只能检测哪个是最长链，不知道哪个是最长合法链</p></blockquote><h3 id="挖矿芯片："><a href="#挖矿芯片：" class="headerlink" title="挖矿芯片："></a>挖矿芯片：</h3><p>CPU -&gt; GPU -&gt; ASIC(Applicition Specific Integrated Circuit)  </p><p>一种ASIC只能为一种加密货币挖矿，除非mining puzzle相同（merge mining）</p><h3 id="矿池："><a href="#矿池：" class="headerlink" title="矿池："></a>矿池：</h3><p>一般有两种组织方式  </p><ol><li>集中式（属于同一个机构）</li><li>分布式（属于不同机构）</li></ol><p>一个矿池可以拥有多个矿工，解决收入不稳定的问题，根据工作量进行收入分配  </p><p>工作量证明： 每尝试一次nonce生成一个share（almost vaild block)  </p><p>优点：  </p><ul><li>解决收入不稳定的问题</li></ul><p>缺点：<br>可能会产生51%攻击</p><ul><li>分叉攻击</li><li>Boycott(A账户发起交易，立刻分叉)</li></ul><h2 id="比特币脚本"><a href="#比特币脚本" class="headerlink" title="比特币脚本"></a>比特币脚本</h2><p><img src="//bruceeezhao.github.io/2020/02/07/区块链技术与应用-比特币系统/script.png" alt="script"></p><p>先执行input script再执行output script，如果过程中出现任何错误都认为交易非法。  </p><p>输入输出脚本类型：</p><h3 id="P2PK-Pay-to-Public-Key"><a href="#P2PK-Pay-to-Public-Key" class="headerlink" title="P2PK(Pay to Public Key)"></a>P2PK(Pay to Public Key)</h3><p><strong>input script:</strong><br>  PUSHDATA(sig)</p><p><strong>output script:</strong><br>  PUSGDATA(PubKey)<br>  CHECKSIG</p><hr><p>脚本执行<br>PUSHDATA(sig)<br>PUSHDATA(PubKey)<br>CHECKSIG</p><hr><p>堆栈元素变化：<br>sig -&gt; PubKey,sig -&gt; true</p><h3 id="P2PKH-Pay-to-Public-Key-Hash"><a href="#P2PKH-Pay-to-Public-Key-Hash" class="headerlink" title="P2PKH(Pay to Public Key Hash)"></a>P2PKH(Pay to Public Key Hash)</h3><p><strong>input script:</strong><br>  PUSHDATA(sig)<br>  PUSHDATA(PubKey)  </p><p><strong>output</strong><br>  DUP<br>  HASH160<br>  PUSHDATA(PubKeyHash)<br>  EQUALVERIFY(比较栈顶两个哈希值是否相等)<br>  CHECKSIG  </p><hr><p>脚本执行<br>PUSHDATA(sig)<br>PUSHDATA(PubKey)<br>DUP<br>HASH160<br>PUSHDATA(PubKeyHash)<br>EQUALVERIFY(比较栈顶两个哈希值是否相等)<br>CHECKSIG  </p><hr><p>堆栈元素变化：<br>sig -&gt; pubKey,sig -&gt; pubKey,PubKey,sig -&gt; PubKeyHash,PubKey,sig -&gt; PubKeyHash,PubKeyHash,PubKey,sig -&gt; PubKey,sig -&gt; True</p><h3 id="P2SH-Pay-to-Script-Hash"><a href="#P2SH-Pay-to-Script-Hash" class="headerlink" title="P2SH(Pay to Script Hash)"></a>P2SH(Pay to Script Hash)</h3><p>采用BIP16的方案：<br><strong>input script:</strong><br>  …<br>  PUSHDATA(sig)<br>  …<br>  PUSHDATA(serialized redeemScript)  </p><p><strong>output scrpit:</strong><br>  HASH160<br>  PUSHDATA(redeemScriptHash)<br>  EQUAL  </p><hr><p>进一步说明  </p><ul><li>input script 要给出一些签名（数目不定）及一段序列化的redeemScript。验证分如下两步：</li></ul><ol><li>验证序列化的redeemScript是否与output script中的哈希值匹配</li><li>反序列话并执行redeemScript，验证input script中给出的签名是否正确</li></ol><ul><li>redeemScript 的形式</li></ul><ol><li>P2PK</li><li>P2PKH</li><li>多重签名形式</li></ol><hr><h4 id="用P2SH实现P2PK"><a href="#用P2SH实现P2PK" class="headerlink" title="用P2SH实现P2PK"></a>用P2SH实现P2PK</h4><p><strong>redeemScript:</strong><br>  PUSHDATA(PubKey)<br>  CHECKSIG  </p><p><strong>input script</strong><br>  PUSHDATA(sig)<br>  PUSHDATA(serialized redeemScript)  </p><p><strong>output script</strong><br>  HASH160<br>  PUSHDATA(redeemScriptHash)<br>  EQUAL  </p><p>第一阶段的验证：<br>  PUSHDATA(sig)<br>  PUSHDATA(serialized redeemScript)<br>  HASH160<br>  PUSHDATA(redeemScriptHash)<br>  EQUAL  </p><p>第二阶段的验证：<br>  PUSHDATA(PubKey)<br>  CHECKSIG  </p><h4 id="多重签名"><a href="#多重签名" class="headerlink" title="多重签名"></a>多重签名</h4><p>例如有5个人，使用其中3个签名可以对账户进行操作<br>最早的多重签名，目前已经不推荐使用  </p><p><strong>input script</strong><br>  ×               (此处的x是因为代码中的bug，向栈中压入一个空元素)<br>  PUSHDATA(Sig_1)<br>  PUSHDATA(Sig_2)<br>  …<br>  PUSHDATA(Sig_M)  </p><p><strong>output script</strong><br>  M<br>  PUSHDATA(pubkey_1)<br>  PUSHDATA(pubkey_2)<br>  …<br>  PUSHDATA(pubkey_N)<br>  N<br>  CHECKMULISIG  </p><h4 id="用P2SH实现多重签名"><a href="#用P2SH实现多重签名" class="headerlink" title="用P2SH实现多重签名"></a>用P2SH实现多重签名</h4><p><strong>input script:</strong><br>  ×<br>  PUSHDATA(Sig_1)<br>  PUSHDATA(Sig_2)<br>  …<br>  PUSHDATA(Sig_M)<br>  PUSHDATA(serialized RedeemScript)  </p><p><strong>output script:</strong><br>  HASH160<br>  PUSHDATA(redeemScriptHash)<br>  EQUAL  </p><p><strong>redeemScript:</strong><br>  M<br>  PUSHDATA(pubkey_1)<br>  PUSHDATA(pubkey_2)<br>  …<br>  PUSHDATA(pubkey_N)<br>  N<br>  CHECKMULISIG  </p><hr><p>脚本执行过程：  </p><p>第一阶段：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FALSE </span><br><span class="line">PUSHDATA(Sig_1)  </span><br><span class="line">PUSHDATA(Sig_2)  </span><br><span class="line">PUSHDATA(seriRS)</span><br><span class="line">HASH160  </span><br><span class="line">PUSHDATA(RSH)  </span><br><span class="line">EQUAL</span><br></pre></td></tr></table></figure><p>第二阶段：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">PUSHDATA(pubkey_1)  </span><br><span class="line">PUSHDATA(pubkey_2)  </span><br><span class="line">PUSHDATA(pubkey_3)</span><br><span class="line">3</span><br><span class="line">CHECKMULISIG</span><br></pre></td></tr></table></figure><h3 id="Proof-of-Burn"><a href="#Proof-of-Burn" class="headerlink" title="Proof of Burn"></a>Proof of Burn</h3><ul><li>output script  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RETURN </span><br><span class="line">  [zero or more ops or text]</span><br></pre></td></tr></table></figure></li></ul><p>这种形式的output被称为：<br>  Provably Unspendable/Prunable Outputs</p><ul><li>脚本说明：<br>假如有一个交易的input指向这个output，不论input里的input script如何设计，执行到RETURN命令之后都会直接返回false，不会执行RETURN后面的其他指令，所以这个outpu无法再花出去，其对应的UTXO也就可以被剪枝了，无需保存。</li></ul><h2 id="比特币分叉-fork"><a href="#比特币分叉-fork" class="headerlink" title="比特币分叉(fork)"></a>比特币分叉(fork)</h2><p>成因：  </p><ul><li><p>state fork<br>挖矿时，两个矿工几乎同时发布区块，就会产生一个临时性的分叉  </p><ul><li>forking attack(deliberate fork)</li></ul></li><li><p>protocal fork<br>因为使用不同版本的协议产生的分叉   </p><ul><li>hard fork</li><li>soft fork</li></ul></li></ul><h3 id="hard-fork"><a href="#hard-fork" class="headerlink" title="hard fork"></a>hard fork</h3><p>对比特币协议内容的分歧，例如区块的大小限制  </p><p>假设新节点更新了协议，旧节点没有更新，那么新节点挖出来的区块不被旧节点认可，新节点在新分叉1上挖，旧节点在分叉2上挖，会产生永久的分叉。</p><h3 id="soft-fork"><a href="#soft-fork" class="headerlink" title="soft fork"></a>soft fork</h3><p>对比特币协议添加一些限制，使得原来合法的交易（区块）在新的协议中不合法。  </p><p>假设区块大小由1M改为0.5M，新节点更新了协议，旧节点没有更新，新节点挖出的区块被老节点认可，老节点挖出的区块不被认可，会出现暂时的分叉。  </p><p>实际情况：  </p><ol><li>给之没有用到的域添加新的含义，coinbase</li><li>P2SH</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##　密码学原理  &lt;/p&gt;&lt;h3 id=&quot;密码学哈希函数&quot;&gt;&lt;a href=&quot;#密码学哈希函数&quot; class=&quot;headerlink&quot; title=&quot;密码学哈希函数&quot;&gt;&lt;/a&gt;密码学哈希函数&lt;/h3&gt;
    
    </summary>
    
      <category term="区块链技术与应用" scheme="https://bruceeezhao.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>rails-admin自定义行为</title>
    <link href="https://bruceeezhao.github.io/2019/12/10/rails-admin%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A1%8C%E4%B8%BA/"/>
    <id>https://bruceeezhao.github.io/2019/12/10/rails-admin自定义行为/</id>
    <published>2019-12-10T10:45:48.000Z</published>
    <updated>2020-02-07T12:29:06.139Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<br><a href="http://dmitrypol.github.io/2015/09/10/rails-admin.html" target="_blank" rel="noopener">http://dmitrypol.github.io/2015/09/10/rails-admin.html</a><br><a href="http://fernandomarcelo.com/2012/05/rails-admin-creating-a-custom-action/" target="_blank" rel="noopener">http://fernandomarcelo.com/2012/05/rails-admin-creating-a-custom-action/</a></p><a id="more"></a><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ol><li><a href="https://stackoverflow.com/questions/2778522/rails-update-attribute-vs-update-attributes" target="_blank" rel="noopener">Rails: update_attribute vs update_attributes</a>  </li></ol><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><ol><li><p>lib/rails_admin_course_open.rb</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'rails_admin/config/actions'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'rails_admin/config/actions/base'</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">RailsAdminCourseOpen</span></span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">RailsAdmin</span></span></span><br><span class="line">  <span class="class"><span class="keyword">module</span> <span class="title">Config</span></span></span><br><span class="line">    <span class="class"><span class="keyword">module</span> <span class="title">Actions</span></span></span><br><span class="line">      <span class="class"><span class="keyword">class</span> <span class="title">CourseOpen</span> &lt; RailsAdmin::Config::<span class="title">Actions::Base</span></span></span><br><span class="line">        <span class="comment"># There are several options that you can set here. </span></span><br><span class="line">        <span class="comment"># Check https://github.com/sferik/rails_admin/blob/master/lib/rails_admin/config/actions/base.rb for more info.</span></span><br><span class="line"> </span><br><span class="line">        register_instance_option <span class="symbol">:bulkable?</span> <span class="keyword">do</span></span><br><span class="line">          <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">        register_instance_option <span class="symbol">:controller</span> <span class="keyword">do</span></span><br><span class="line">          Proc.new <span class="keyword">do</span></span><br><span class="line">            <span class="comment"># Get all selected rows</span></span><br><span class="line">            @objects = list_entries(@model_config, <span class="symbol">:destroy</span>)</span><br><span class="line"> </span><br><span class="line">            <span class="comment"># Update field open to true</span></span><br><span class="line">            @objects.each <span class="keyword">do</span> <span class="params">|object|</span></span><br><span class="line">                object.update_attribute(<span class="symbol">:open</span>, <span class="literal">true</span>)</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">            flash[<span class="symbol">:success</span>] = <span class="string">"<span class="subst">#&#123;@model_config.label&#125;</span> successfully opend."</span></span><br><span class="line"> </span><br><span class="line">            redirect_to back_or_index</span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="class"><span class="keyword">class</span> <span class="title">CourseClose</span> &lt; RailsAdmin::Config::<span class="title">Actions::Base</span></span></span><br><span class="line">        <span class="comment"># There are several options that you can set here. </span></span><br><span class="line">        <span class="comment"># Check https://github.com/sferik/rails_admin/blob/master/lib/rails_admin/config/actions/base.rb for more info.</span></span><br><span class="line"> </span><br><span class="line">        register_instance_option <span class="symbol">:bulkable?</span> <span class="keyword">do</span></span><br><span class="line">          <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">        register_instance_option <span class="symbol">:controller</span> <span class="keyword">do</span></span><br><span class="line">          Proc.new <span class="keyword">do</span></span><br><span class="line">            <span class="comment"># Get all selected rows</span></span><br><span class="line">            @objects = list_entries(@model_config, <span class="symbol">:destroy</span>)</span><br><span class="line">            <span class="comment"># Update field open to true</span></span><br><span class="line">            @objects.each <span class="keyword">do</span> <span class="params">|object|</span></span><br><span class="line">                object.update_attribute(<span class="symbol">:open</span>, <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">            flash[<span class="symbol">:success</span>] = <span class="string">"<span class="subst">#&#123;@model_config.label&#125;</span> successfully closed."</span></span><br><span class="line"> </span><br><span class="line">            redirect_to back_or_index</span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>config/initializers/rails_admin.rb  注册</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">RailsAdmin.config <span class="keyword">do</span> <span class="params">|config|</span></span><br><span class="line">  <span class="comment"># Register the class in lib/rails_admin_publish.rb</span></span><br><span class="line">  <span class="class"><span class="keyword">module</span> <span class="title">RailsAdmin</span></span></span><br><span class="line">    <span class="class"><span class="keyword">module</span> <span class="title">Config</span></span></span><br><span class="line">      <span class="class"><span class="keyword">module</span> <span class="title">Actions</span></span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">CourseOpen</span> &lt; RailsAdmin::Config::<span class="title">Actions::Base</span></span></span><br><span class="line">          RailsAdmin::Config::Actions.register(<span class="keyword">self</span>)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">CourseClose</span> &lt; RailsAdmin::Config::<span class="title">Actions::Base</span></span></span><br><span class="line">          RailsAdmin::Config::Actions.register(<span class="keyword">self</span>)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  config.actions <span class="keyword">do</span></span><br><span class="line">    <span class="comment"># root actions</span></span><br><span class="line">    dashboard                     <span class="comment"># mandatory</span></span><br><span class="line">    <span class="comment"># collection actions</span></span><br><span class="line">    index                         <span class="comment"># mandatory</span></span><br><span class="line">    new</span><br><span class="line">    export</span><br><span class="line">    history_index</span><br><span class="line">    bulk_delete</span><br><span class="line">    <span class="comment"># member actions</span></span><br><span class="line">    show</span><br><span class="line">    edit</span><br><span class="line">    delete</span><br><span class="line">    history_show</span><br><span class="line">    <span class="comment"># show_in_app</span></span><br><span class="line">    course_open <span class="keyword">do</span></span><br><span class="line">      <span class="comment"># Make it visible only for Course model. You can remove this if you don't need.</span></span><br><span class="line">      visible <span class="keyword">do</span></span><br><span class="line">        bindings[<span class="symbol">:abstract_model</span>].model.to_s == <span class="string">"Course"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    course_close <span class="keyword">do</span></span><br><span class="line">      <span class="comment"># Make it visible only for Course model. You can remove this if you don't need.</span></span><br><span class="line">      visible <span class="keyword">do</span></span><br><span class="line">        bindings[<span class="symbol">:abstract_model</span>].model.to_s == <span class="string">"Course"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>config/locales/zh-CN.yml</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">actions:</span></span><br><span class="line">     <span class="symbol">course_open:</span></span><br><span class="line">       <span class="symbol">menu:</span> <span class="string">"开启选课"</span></span><br><span class="line">       <span class="symbol">bulk_link:</span> <span class="string">"开启选课%&#123;model_label_plural&#125;"</span></span><br><span class="line">     <span class="symbol">course_close:</span></span><br><span class="line">       <span class="symbol">menu:</span> <span class="string">"关闭选课"</span></span><br><span class="line">       <span class="symbol">bulk_link:</span> <span class="string">"关闭选课%&#123;model_label_plural&#125;"</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;http://dmitrypol.github.io/2015/09/10/rails-admin.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://dmitrypol.github.io/2015/09/10/rails-admin.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://fernandomarcelo.com/2012/05/rails-admin-creating-a-custom-action/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://fernandomarcelo.com/2012/05/rails-admin-creating-a-custom-action/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>rails使用searchkick和elasticsearch进行全文搜索</title>
    <link href="https://bruceeezhao.github.io/2019/12/10/rails%E4%BD%BF%E7%94%A8searchkick%E5%92%8Celasticsearch%E8%BF%9B%E8%A1%8C%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2/"/>
    <id>https://bruceeezhao.github.io/2019/12/10/rails使用searchkick和elasticsearch进行全文搜索/</id>
    <published>2019-12-10T10:43:04.000Z</published>
    <updated>2020-02-07T12:17:45.411Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<br><a href="https://code.tutsplus.com/articles/full-text-search-in-rails-using-elasticsearch--cms-22920" target="_blank" rel="noopener">https://code.tutsplus.com/articles/full-text-search-in-rails-using-elasticsearch–cms-22920</a><br><a href="https://github.com/ankane/searchkick/blob/v3.1.3/README.md" target="_blank" rel="noopener">https://github.com/ankane/searchkick/blob/v3.1.3/README.md</a></p><a id="more"></a><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><h2 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h2><table><thead><tr><th>软件名称</th><th>版本号</th></tr></thead><tbody><tr><td>rails</td><td>4.2.5.2</td></tr><tr><td>ruby</td><td>2.3.8</td></tr><tr><td>gem</td><td>2.7.7</td></tr><tr><td>bundle</td><td>2.0.2</td></tr><tr><td>searchkick</td><td>3.1.3</td></tr><tr><td>elasticsearch</td><td>5.6.16</td></tr><tr><td>ik</td><td>5.6.16</td></tr></tbody></table><h2 id="选择依据"><a href="#选择依据" class="headerlink" title="选择依据"></a>选择依据</h2><p><img src="//bruceeezhao.github.io/2019/12/10/rails使用searchkick和elasticsearch进行全文搜索/search.png" alt="搜索方式活跃度"><br><a href="https://www.ctolib.com/article/compares/14566" target="_blank" rel="noopener">图片来源</a></p><p>根据上图来看，searchkick在热门度和活跃度上都有不错的表现。  </p><p>以下是主要的搜索gem简介：<a href="https://www.ctolib.com/awesome-rails-gem.html#searchingz" target="_blank" rel="noopener">来源</a></p><ul><li>ransack - Ransack enables the creation of both simple and advanced search forms for your Ruby on Rails application.</li><li>elasticsearch-rails - Elasticsearch integrations for ActiveModel/Record and Ruby on Rails.</li><li>Chewy - High-level Elasticsearch Ruby framework based on the official elasticsearch-ruby client.</li><li>pg_search - pg_search builds ActiveRecord named scopes that take advantage of PostgreSQL’s full text search</li><li>sunspot - Sunspot is a Ruby library for expressive, powerful interaction with the Solr search engine. Sunspot is built on top of the RSolr library, which provides a low-level interface for Solr interaction; Sunspot provides a simple, intuitive, expressive DSL backed by powerful features for indexing objects and searching for them.</li><li>searchkick - Intelligent search made easy with Rails and Elasticsearch.</li></ul><h1 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h1><h2 id="elasticsearch"><a href="#elasticsearch" class="headerlink" title="elasticsearch"></a>elasticsearch</h2><p><a href="https://www.elastic.co/cn/downloads/past-releases#elasticsearch" target="_blank" rel="noopener">elasticsearch下载地址</a>  </p><p>安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo dpkg -i elasticsearch-5.6.16.deb</span><br><span class="line"><span class="meta">#</span> 开启服务</span><br><span class="line"><span class="meta">$</span> service elasticsearch start</span><br><span class="line"><span class="meta">#</span> 验证是否启动成功</span><br><span class="line"><span class="meta">$</span> curl 127.0.0.1:9200</span><br><span class="line">&#123;</span><br><span class="line">  "name" : "lCl9Rc9",</span><br><span class="line">  "cluster_name" : "elasticsearch",</span><br><span class="line">  "cluster_uuid" : "HpWOmNyOR0aqA0aZeG3gGA",</span><br><span class="line">  "version" : &#123;</span><br><span class="line">    "number" : "5.6.16",</span><br><span class="line">    "build_hash" : "3a740d1",</span><br><span class="line">    "build_date" : "2019-03-13T15:33:36.565Z",</span><br><span class="line">    "build_snapshot" : false,</span><br><span class="line">    "lucene_version" : "6.6.1"</span><br><span class="line">  &#125;,</span><br><span class="line">  "tagline" : "You Know, for Search"</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span> 看到类似上面的输出则证明服务启动成功</span><br><span class="line"><span class="meta">#</span> 设置服务开机自启</span><br><span class="line"><span class="meta">$</span> systemctl enable elasticsearch.service</span><br></pre></td></tr></table></figure><h2 id="ik插件"><a href="#ik插件" class="headerlink" title="ik插件"></a>ik插件</h2><p>ik插件是elasticsearch中文分词插件<br><a href="https://github.com/medcl/elasticsearch-analysis-ik" target="_blank" rel="noopener">ik插件项目地址</a></p><p>安装:  </p><ol><li>download or compile</li></ol><p><strong>optional 1</strong></p><ul><li>download pre-build package from here: <a href="https://github.com/medcl/elasticsearch-analysis-ik/releases" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik/releases</a></li></ul><p>create plugin folder <code>cd your-es-root/plugins/ &amp;&amp; mkdir ik</code></p><p>unzip plugin to folder <code>your-es-root/plugins/ik</code></p><p><strong>optional 2</strong></p><ul><li>use elasticsearch-plugin to install ( supported from version v5.5.1 ):<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.6.16/elasticsearch-analysis-ik-5.6.16.zip</span><br></pre></td></tr></table></figure></li></ul><p><strong>NOTE: replace 5.6.16 to your own elasticsearch version</strong></p><ol start="2"><li>restart elasticsearch</li></ol><h2 id="elasticsearch可视化"><a href="#elasticsearch可视化" class="headerlink" title="elasticsearch可视化"></a>elasticsearch可视化</h2><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><ol><li><p>app/models/course.rb</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Course</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  searchkick <span class="symbol">language:</span> <span class="string">"chinese"</span></span><br></pre></td></tr></table></figure></li><li><p>app/helpers/search_helper.rb</p></li></ol><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">SearchHelper</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">search</span></span></span><br><span class="line">    <span class="keyword">if</span> params[<span class="symbol">:term</span>] == <span class="string">""</span> <span class="keyword">or</span> params[<span class="symbol">:term</span>].<span class="literal">nil</span>?</span><br><span class="line">      @courses = []</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      term = params[<span class="symbol">:term</span>]</span><br><span class="line"></span><br><span class="line">      <span class="comment"># 搜索，按照短语的方式</span></span><br><span class="line">      <span class="keyword">for</span> res <span class="keyword">in</span> Course.search term, <span class="symbol">highlight:</span> <span class="literal">true</span>, <span class="symbol">match:</span> <span class="symbol">:phrase</span></span><br><span class="line">        @courses &lt;&lt; res</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 分页</span></span><br><span class="line">      @courses = Kaminari.paginate_array(tmp).page(params[<span class="symbol">:page</span>]).per(<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> @courses</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>app/views/search/_form.html.erb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= form_for :term, url: list_courses_path, method: :get do |form| %&gt;</span><br><span class="line">  &lt;p&gt;</span><br><span class="line">    &lt;%= text_field_tag :term, params[:term] %&gt;</span><br><span class="line">    &lt;%= submit_tag &quot;Search&quot;, name: nil %&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">&lt;% end %&gt;</span><br></pre></td></tr></table></figure></li><li><p>app/views/courses/list.html.erb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= render &apos;search/form&apos; %&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;https://code.tutsplus.com/articles/full-text-search-in-rails-using-elasticsearch--cms-22920&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://code.tutsplus.com/articles/full-text-search-in-rails-using-elasticsearch–cms-22920&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/ankane/searchkick/blob/v3.1.3/README.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ankane/searchkick/blob/v3.1.3/README.md&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="rails" scheme="https://bruceeezhao.github.io/categories/rails/"/>
    
    
      <category term="rails" scheme="https://bruceeezhao.github.io/tags/rails/"/>
    
      <category term="searchkick" scheme="https://bruceeezhao.github.io/tags/searchkick/"/>
    
      <category term="elasticsearch" scheme="https://bruceeezhao.github.io/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop Hbase Pseudo-Distributed Local Install 安装记录</title>
    <link href="https://bruceeezhao.github.io/2019/11/27/Hadoop-Hbase-Pseudo-Distributed-Local-Install-%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/"/>
    <id>https://bruceeezhao.github.io/2019/11/27/Hadoop-Hbase-Pseudo-Distributed-Local-Install-安装记录/</id>
    <published>2019-11-27T06:24:30.000Z</published>
    <updated>2019-11-27T06:30:27.575Z</updated>
    
    <content type="html"><![CDATA[<p>今天部署了一下hadoop和hbase，期间踩了不少坑。写此文以帮助hadoop、hbase的新手避坑。</p><a id="more"></a><p><strong>不要选择最新的软件</strong><br><strong>不要选择最新的软件</strong><br><strong>不要选择最新的软件</strong><br>重要的事情说三遍</p><h2 id="安装包下载"><a href="#安装包下载" class="headerlink" title="安装包下载"></a>安装包下载</h2><p>jdk: </p><ul><li>版本：jdk-8u191-linux-x64.tar.gz</li><li>网址：wget <a href="http://upyun.qubianzhong.cn/file/java/jdk-8u191-linux-x64.tar.gz" target="_blank" rel="noopener">http://upyun.qubianzhong.cn/file/java/jdk-8u191-linux-x64.tar.gz</a></li><li>来自：<a href="https://cloud.tencent.com/developer/article/1371521" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1371521</a></li></ul><p>hadoop: </p><ul><li>版本：hadoop-2.9.2.tar.gz</li><li>网址：<a href="https://hadoop.apache.org/releases.html" target="_blank" rel="noopener">https://hadoop.apache.org/releases.html</a></li></ul><p>hbase: </p><ul><li>版本：hbase-1.4.9-bin.tar.gz</li><li>网址：<a href="http://hbase.apache.org/downloads.html" target="_blank" rel="noopener">http://hbase.apache.org/downloads.html</a></li></ul><p>百度云：</p><ul><li>链接: <a href="https://pan.baidu.com/s/1z8iX9IxTiYgDNNYp_f5vrA" target="_blank" rel="noopener">https://pan.baidu.com/s/1z8iX9IxTiYgDNNYp_f5vrA</a> </li><li>提取码: 81iu</li></ul><h2 id="jdk"><a href="#jdk" class="headerlink" title="jdk"></a>jdk</h2><p>将压缩包解压放置于你喜欢的目录，并进入该目录，笔者放在了/home/bruce/Software。<br>编辑/etc/profile文件，添加环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/home/bruce/Software/jdk1.8.0_191</span><br><span class="line">export JAR_HOME=$JAVA_HOME/jre</span><br><span class="line"></span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JAR_HOME/lib:$CLASSPATH</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JAR_HOME/bin</span><br></pre></td></tr></table></figure><h2 id="Hadoop"><a href="#Hadoop" class="headerlink" title="Hadoop"></a>Hadoop</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>首先安装以下软件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install ssh</span><br><span class="line">$ sudo apt-get install rsync</span><br></pre></td></tr></table></figure><h3 id="下载Hadoop："><a href="#下载Hadoop：" class="headerlink" title="下载Hadoop："></a>下载Hadoop：</h3><p>将压缩包解压放置于你喜欢的目录，并进入该目录，笔者放在了/home/bruce/Software。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd hadoop-2.9.2/</span><br></pre></td></tr></table></figure><p>可以在/etc/profile中为hadoop添加环境变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export Hadoop=/home/bruce/Software/hadoop-2.9.2/bin</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JAR_HOME/bin:$Hadoop</span><br></pre></td></tr></table></figure><h3 id="修改配置："><a href="#修改配置：" class="headerlink" title="修改配置："></a>修改配置：</h3><p>etc/hadoop/core-site.xml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>etc/hadoop/hdfs-site.xml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;1&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>修改 etc/hadoop/hadoop-env.sh 文件：<br>在文件末尾加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/home/bruce/Software/jdk1.8.0_191</span><br></pre></td></tr></table></figure><h3 id="配置无密码ssh登录"><a href="#配置无密码ssh登录" class="headerlink" title="配置无密码ssh登录"></a>配置无密码ssh登录</h3><p>确认是否可以无密码登录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh localhost</span><br></pre></td></tr></table></figure><p>若不可以则执行以下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -P &apos;&apos; -f ~/.ssh/id_rsa</span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line">chmod 0600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><h3 id="本地运行一个-MapReduce-job"><a href="#本地运行一个-MapReduce-job" class="headerlink" title="本地运行一个 MapReduce job"></a>本地运行一个 MapReduce job</h3><ol><li><p>格式化文件系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/hdfs namenode -format</span><br></pre></td></tr></table></figure></li><li><p>Start NameNode daemon and DataNode daemon:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/start-dfs.sh</span><br></pre></td></tr></table></figure></li></ol><p>运行完后应该可以访问<a href="http://localhost:50070/" target="_blank" rel="noopener">http://localhost:50070/</a></p><ol start="3"><li><p>Make the HDFS directories required to execute MapReduce jobs:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin/hdfs dfs -mkdir /user</span><br><span class="line">bin/hdfs dfs -mkdir /user/&lt;username&gt;</span><br></pre></td></tr></table></figure></li><li><p>Copy the input files into the distributed filesystem:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/hdfs dfs -put etc/hadoop input</span><br></pre></td></tr></table></figure></li><li><p>Run some of the examples provided:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.9.2.jar grep input output &apos;dfs[a-z.]+&apos;</span><br></pre></td></tr></table></figure></li></ol><p>执行 jps 可以看到以下进程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ jps</span><br><span class="line">15975 Jps</span><br><span class="line">15017 NameNode</span><br><span class="line">15389 SecondaryNameNode</span><br><span class="line">15182 DataNode</span><br></pre></td></tr></table></figure><ol start="6"><li>Examine the output files: Copy the output files from the distributed filesystem to the local filesystem and examine them:</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin/hdfs dfs -get output output</span><br><span class="line">cat output/*</span><br></pre></td></tr></table></figure><p>成功的话会得到如下输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">6dfs.audit.logger</span><br><span class="line">4dfs.class</span><br><span class="line">3dfs.logger</span><br><span class="line">3dfs.server.namenode.</span><br><span class="line">2dfs.audit.log.maxbackupindex</span><br><span class="line">2dfs.period</span><br><span class="line">2dfs.audit.log.maxfilesize</span><br><span class="line">1dfs.log</span><br><span class="line">1dfs.file</span><br><span class="line">1dfs.servers</span><br><span class="line">1dfsadmin</span><br><span class="line">1dfsmetrics.log</span><br><span class="line">1dfs.replication</span><br></pre></td></tr></table></figure><p>or</p><p>View the output files on the distributed filesystem:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/hdfs dfs -cat output/*</span><br></pre></td></tr></table></figure><p>会得到一样的输出</p><h2 id="Hbase"><a href="#Hbase" class="headerlink" title="Hbase"></a>Hbase</h2><h3 id="下载Hbase"><a href="#下载Hbase" class="headerlink" title="下载Hbase:"></a>下载Hbase:</h3><p>将压缩包解压放置于你喜欢的目录，并进入该目录，笔者放在了/home/bruce/Software。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd hbase-1.4.9/</span><br></pre></td></tr></table></figure><p>可以在/etc/profile中为hbase添加环境变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export Hbase=/home/bruce/Software/hbase-1.4.9/bin</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JAR_HOME/bin:$Hadoop:$Hbase</span><br></pre></td></tr></table></figure><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><ol><li><p>编辑 conf/hbase-site.xml 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.rootdir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hdfs://localhost:9000/hbase&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.cluster.distributed&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;true&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.zookeeper.property.dataDir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/zookeeper&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></li><li><p>编辑 conf/hbase-env.sh 文件<br>在文件末尾加入：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/home/bruce/Software/jdk1.8.0_191</span><br></pre></td></tr></table></figure></li><li><p>启动hbase</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/start-hbase.sh</span><br></pre></td></tr></table></figure></li></ol><p>若启动成功，执行jps会看到一下进程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ jps</span><br><span class="line">16503 HMaster</span><br><span class="line">16951 Jps</span><br><span class="line">15017 NameNode</span><br><span class="line">16426 HQuorumPeer</span><br><span class="line">15389 SecondaryNameNode</span><br><span class="line">15182 DataNode</span><br><span class="line">16639 HRegionServer</span><br></pre></td></tr></table></figure><ol start="4"><li>hdfs会自动生成hbase目录<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/hadoop fs -ls /hbase</span><br><span class="line">Found 8 items</span><br><span class="line">drwxr-xr-x   - hadoop supergroup          0 2019-04-23 23:33 /hbase/.tmp</span><br><span class="line">drwxr-xr-x   - hadoop supergroup          0 2019-04-23 23:33 /hbase/MasterProcWALs</span><br><span class="line">drwxr-xr-x   - hadoop supergroup          0 2019-04-23 23:33 /hbase/WALs</span><br><span class="line">drwxr-xr-x   - hadoop supergroup          0 2019-04-23 23:33 /hbase/data</span><br><span class="line">drwxr-xr-x   - hadoop supergroup          0 2019-04-23 23:33 /hbase/hbase</span><br><span class="line">-rw-r--r--   1 hadoop supergroup         42 2019-04-23 23:32 /hbase/hbase.id</span><br><span class="line">-rw-r--r--   1 hadoop supergroup          7 2019-04-23 23:32 /hbase/hbase.version</span><br><span class="line">drwxr-xr-x   - hadoop supergroup          0 2019-04-23 23:34 /hbase/oldWALs</span><br></pre></td></tr></table></figure></li></ol><p>以上操作可以使用root用户进行操作。也可以使用普通用户，若遇到权限问题，可以添加一个hadoop用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#添加用户</span><br><span class="line">sudo addgroup hadoop</span><br><span class="line">sudo adduser -g hadoop hadoop</span><br><span class="line"></span><br><span class="line">#为新用户添加root权限</span><br><span class="line">sudo vim /etc/sudoers </span><br><span class="line">#在文件中添加</span><br><span class="line">hadoop  ALL=(ALL:ALL) ALL</span><br><span class="line"></span><br><span class="line">#改变目录所有权</span><br><span class="line">chown -R hadoop:hadoop hadoop-2.9.2/ </span><br><span class="line">chmod -R 755 hadhbase-1.4.9/</span><br><span class="line"></span><br><span class="line">chown -R hadoop:hadoop hbase-1.4.9/ </span><br><span class="line">chmod -R 755 hbase-1.4.9/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天部署了一下hadoop和hbase，期间踩了不少坑。写此文以帮助hadoop、hbase的新手避坑。&lt;/p&gt;
    
    </summary>
    
      <category term="环境部署" scheme="https://bruceeezhao.github.io/categories/%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="hadoop" scheme="https://bruceeezhao.github.io/tags/hadoop/"/>
    
      <category term="hbase" scheme="https://bruceeezhao.github.io/tags/hbase/"/>
    
  </entry>
  
  <entry>
    <title>ruby on rails环境搭建</title>
    <link href="https://bruceeezhao.github.io/2019/11/25/ruby-on-rails%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://bruceeezhao.github.io/2019/11/25/ruby-on-rails环境搭建/</id>
    <published>2019-11-25T06:23:42.000Z</published>
    <updated>2019-11-27T08:52:11.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装ruby"><a href="#安装ruby" class="headerlink" title="安装ruby"></a>安装ruby</h1><p>ruby 存在很多版本，不同的项目可能会使用不同版本的ruby，不同的版本往往有很多不同的依赖使得项目不能运行，因此我们应该考虑到在计算机上管理多个不同版本的ruby。这里我们选用rvm作为ruby的版本管理软件。</p><a id="more"></a><h2 id="安装rvm"><a href="#安装rvm" class="headerlink" title="安装rvm"></a>安装rvm</h2><ul><li><p>install GPG keys</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</span><br></pre></td></tr></table></figure></li><li><p>install RVM </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ \curl -sSL https://get.rvm.io | bash -s stable</span><br></pre></td></tr></table></figure></li></ul><p>修改shell为login shell<br>Edit–&gt;Profile Preference–&gt;Command</p><p><img src="//bruceeezhao.github.io/2019/11/25/ruby-on-rails环境搭建/run_command_as_login.png" alt="本地图片"></p><p>修改后关闭此终端，打开一个新的终端继续下面的操作。</p><h2 id="使用rvm管理ruby版本"><a href="#使用rvm管理ruby版本" class="headerlink" title="使用rvm管理ruby版本"></a>使用rvm管理ruby版本</h2><p>在终端中输入  rvm list known 你将会看到如下输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ rvm list known</span><br><span class="line"># MRI Rubies</span><br><span class="line">[ruby-]1.8.6[-p420]</span><br><span class="line">[ruby-]1.8.7[-head] # security released on head</span><br><span class="line">[ruby-]1.9.1[-p431]</span><br><span class="line">[ruby-]1.9.2[-p330]</span><br><span class="line">[ruby-]1.9.3[-p551]</span><br><span class="line">[ruby-]2.0.0[-p648]</span><br><span class="line">[ruby-]2.1[.10]</span><br><span class="line">[ruby-]2.2[.10]</span><br><span class="line">[ruby-]2.3[.8]</span><br><span class="line">[ruby-]2.4[.6]</span><br><span class="line">[ruby-]2.5[.5]</span><br><span class="line">[ruby-]2.6[.3]</span><br><span class="line">[ruby-]2.7[.0-preview1]</span><br><span class="line">ruby-head</span><br></pre></td></tr></table></figure><p>上面的信息告诉你有哪些版本是可用的，下面你可以选择你需要的版本进行下载：<br>例如你需要2.3版本的ruby，输入如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rvm install 2.3</span><br></pre></td></tr></table></figure><p>使用 <strong>rvm list</strong> 命令可以看出你已经安装的ruby版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ rvm list </span><br><span class="line">=* ruby-2.3.8 [ x86_64 ]</span><br><span class="line">   ruby-2.6.3 [ x86_64 ]</span><br><span class="line"></span><br><span class="line"># =&gt; - current</span><br><span class="line"># =* - current &amp;&amp; default</span><br><span class="line">#  * - default</span><br></pre></td></tr></table></figure><p>上面的信息说明在我的系统中安装了2.3 和 2.6 两个版本，当前使用的是2.3版本，且是默认版本。 </p><p>如果我想使用2.6的版本我需要做什么呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ rvm use 2.6</span><br><span class="line">Using /home/bruce/.rvm/gems/ruby-2.6.3</span><br><span class="line">$ rvm list</span><br><span class="line"> * ruby-2.3.8 [ x86_64 ]</span><br><span class="line">=&gt; ruby-2.6.3 [ x86_64 ]</span><br><span class="line"></span><br><span class="line"># =&gt; - current</span><br><span class="line"># =* - current &amp;&amp; default</span><br><span class="line">#  * - default</span><br><span class="line"></span><br><span class="line">$ ruby -v</span><br><span class="line">ruby 2.6.3p62 (2019-04-16 revision 67580) [x86_64-linux]</span><br></pre></td></tr></table></figure><p>可以看到我们已经切换到2.6版本了。<br>更多rvm操作 <a href="http://rvm.io/rvm" target="_blank" rel="noopener">http://rvm.io/rvm</a></p><h2 id="使用gemset"><a href="#使用gemset" class="headerlink" title="使用gemset"></a>使用gemset</h2><p>gemset 为gem安装的插件提供一个独立的空间，可以创建多个gemset以满足不同项目的需求，减少不同项目之间的依赖冲突。</p><ul><li><p>创建gemset</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rvm gemset create rails2.6</span><br></pre></td></tr></table></figure></li><li><p>使用创建的gemset</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rvm use 2.6@rails2.6</span><br><span class="line">Using /home/bruce/.rvm/gems/ruby-2.6.3 with gemset rails2.6</span><br></pre></td></tr></table></figure></li><li><p>列出系统内gemset</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ rvm gemset list</span><br><span class="line"></span><br><span class="line">gemsets for ruby-2.6.3 (found in /home/bruce/.rvm/gems/ruby-2.6.3)</span><br><span class="line">   (default)</span><br><span class="line">   global</span><br><span class="line">=&gt; rails2.6</span><br></pre></td></tr></table></figure></li></ul><p>更多gemset操作： <a href="http://rvm.io/gemsets" target="_blank" rel="noopener">http://rvm.io/gemsets</a></p><h1 id="更换源"><a href="#更换源" class="headerlink" title="更换源"></a>更换源</h1><h2 id="gem-更换国内源"><a href="#gem-更换国内源" class="headerlink" title="gem 更换国内源"></a>gem 更换国内源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/</span><br><span class="line"><span class="meta">$</span> gem sources -l</span><br><span class="line">https://gems.ruby-china.com</span><br><span class="line"><span class="meta">#</span> 确保只有 gems.ruby-china.com</span><br></pre></td></tr></table></figure><p>bundle </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> bundle config mirror.https://rubygems.org https://gems.ruby-china.com</span><br></pre></td></tr></table></figure><h1 id="安装yarn"><a href="#安装yarn" class="headerlink" title="安装yarn"></a>安装yarn</h1><p><a href="https://yarn.bootcss.com/docs/install/#debian-stable" target="_blank" rel="noopener">https://yarn.bootcss.com/docs/install/#debian-stable</a></p><p>yarn 更换国内源<br>yarn config set registry <a href="https://registry.npm.taobao.org/" target="_blank" rel="noopener">https://registry.npm.taobao.org/</a></p><h1 id="安装rails"><a href="#安装rails" class="headerlink" title="安装rails"></a>安装rails</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gem install rails</span><br></pre></td></tr></table></figure><h1 id="ruby-交互式编程"><a href="#ruby-交互式编程" class="headerlink" title="ruby 交互式编程"></a>ruby 交互式编程</h1><p>irb 是ruby自带的交互式变成工具<br>pry 的体验要好于irb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gem install pry</span><br></pre></td></tr></table></figure><h1 id="gem-版本降级"><a href="#gem-版本降级" class="headerlink" title="gem 版本降级"></a>gem 版本降级</h1><p>gem版本过高会下载比较新的gem包，会发生依赖冲突，故可以降低gem的版本，使用下面的命令可以安装制定版本的gem</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gem update --system 2.7.7</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装ruby&quot;&gt;&lt;a href=&quot;#安装ruby&quot; class=&quot;headerlink&quot; title=&quot;安装ruby&quot;&gt;&lt;/a&gt;安装ruby&lt;/h1&gt;&lt;p&gt;ruby 存在很多版本，不同的项目可能会使用不同版本的ruby，不同的版本往往有很多不同的依赖使得项目不能运行，因此我们应该考虑到在计算机上管理多个不同版本的ruby。这里我们选用rvm作为ruby的版本管理软件。&lt;/p&gt;
    
    </summary>
    
      <category term="环境部署" scheme="https://bruceeezhao.github.io/categories/%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="ruby" scheme="https://bruceeezhao.github.io/tags/ruby/"/>
    
  </entry>
  
  <entry>
    <title>Python操作Access数据库</title>
    <link href="https://bruceeezhao.github.io/2019/06/05/Python%E6%93%8D%E4%BD%9CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://bruceeezhao.github.io/2019/06/05/Python操作Access数据库/</id>
    <published>2019-06-05T14:00:17.000Z</published>
    <updated>2019-11-25T07:18:57.006Z</updated>
    
    <content type="html"><![CDATA[<p>说明：建立两个连接是因为，只使用一个连接时会出现以下错误：<br>[24000] [Microsoft][ODBC Microsoft Access Driver]Invalid cursor state  (43) (SQLExecDirectW)  </p><a id="more"></a><h2 id="例程1"><a href="#例程1" class="headerlink" title="例程1"></a>例程1</h2><p>以下是测试代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyodbc</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DBfile = <span class="string">r"C:\Users\eagle\Desktop\Database21.accdb"</span>  <span class="comment"># 数据库文件</span></span><br><span class="line">conn = pyodbc.connect(<span class="string">r"Driver=&#123;Microsoft Access Driver (*.mdb, *.accdb)&#125;;DBQ="</span> + DBfile + <span class="string">";Uid=;Pwd=;"</span>)</span><br><span class="line">conn1 = pyodbc.connect(<span class="string">r"Driver=&#123;Microsoft Access Driver (*.mdb, *.accdb)&#125;;DBQ="</span> + DBfile + <span class="string">";Uid=;Pwd=;"</span>) </span><br><span class="line">cursor = conn.cursor()</span><br><span class="line">cursor1 = conn1.cursor()</span><br><span class="line"></span><br><span class="line">TABLE = <span class="string">'xuesheng'</span></span><br><span class="line"></span><br><span class="line">SQL = <span class="string">"delete * from %s;"</span> % TABLE</span><br><span class="line">cursor.execute(SQL)</span><br><span class="line">cursor.commit()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">()</span>:</span></span><br><span class="line">    name_base = <span class="string">'zhang'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100000</span>):</span><br><span class="line">        ID = i</span><br><span class="line">        name = name_base + str(i)</span><br><span class="line">        age = random.randint(<span class="number">20</span>,<span class="number">26</span>)</span><br><span class="line">        sex = <span class="string">'fmale'</span> <span class="keyword">if</span> (age % <span class="number">2</span>) == <span class="number">0</span>  <span class="keyword">else</span> <span class="string">'male'</span> </span><br><span class="line">        chinese = random.randint(<span class="number">0</span>,<span class="number">100</span>)</span><br><span class="line">        eng = random.randint(<span class="number">0</span>,<span class="number">100</span>)</span><br><span class="line">        math = random.randint(<span class="number">0</span>,<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">        SQL = <span class="string">"insert into %s values(%d, '%s', %d, '%s', %d, %d, %d) ;"</span> \</span><br><span class="line">            % (TABLE, ID, name, age, sex, chinese, eng, math)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cursor1.execute(SQL)</span><br><span class="line">            cursor1.commit()</span><br><span class="line">            <span class="comment">#print(SQL)</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">'write ERROR: %s'</span> %e)</span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">        SQL = <span class="string">"SELECT * from %s;"</span> % TABLE</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cursor.execute(SQL)</span><br><span class="line">            <span class="comment">#for row in cursor.execute(SQL):</span></span><br><span class="line">                <span class="comment">#print (row)</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">'read ERROR:%s'</span> %e)</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        </span><br><span class="line">w = threading.Thread(target=write,args=())</span><br><span class="line">w.setDaemon(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">r = threading.Thread(target=read,args=())</span><br><span class="line">r.setDaemon(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">w.start()</span><br><span class="line">r.start()</span><br><span class="line"></span><br><span class="line">w.join()</span><br><span class="line">r.join()</span><br><span class="line"></span><br><span class="line">SQL = <span class="string">"select count(*) from %s;"</span> % TABLE</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> cursor.execute(SQL):</span><br><span class="line">    print(row)</span><br><span class="line"></span><br><span class="line">cursor.commit()</span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br><span class="line">conn1.close()</span><br></pre></td></tr></table></figure><h2 id="例程2"><a href="#例程2" class="headerlink" title="例程2"></a>例程2</h2><p>该例程完成access数据库的复制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyodbc</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> getopt</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">logging.basicConfig(level=logging.DEBUG,</span><br><span class="line">                format=<span class="string">'%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s'</span>,</span><br><span class="line">                datefmt=<span class="string">'%a, %d %b %Y %H:%M:%S'</span>,</span><br><span class="line">                filename=<span class="string">'access_copy.log'</span>,</span><br><span class="line">                filemode=<span class="string">'a'</span>)</span><br><span class="line"></span><br><span class="line">SourceDatabase = <span class="literal">None</span></span><br><span class="line">SourceTable = <span class="literal">None</span></span><br><span class="line">DestDatabase = <span class="literal">None</span></span><br><span class="line">DestTable = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># connection and cursor</span></span><br><span class="line">conn_s = <span class="literal">None</span></span><br><span class="line">cursor_s = <span class="literal">None</span></span><br><span class="line">conn_d = <span class="literal">None</span></span><br><span class="line">cursor_d = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(row)</span>:</span></span><br><span class="line">    error = <span class="number">0</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        SQL = <span class="string">"insert into %s values %s"</span> \</span><br><span class="line">            %(DestTable, row)</span><br><span class="line">        logging.info(SQL)</span><br><span class="line">        cursor_d.execute(SQL)</span><br><span class="line">        cursor_d.commit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> re.search(<span class="string">'duplicate data'</span>, e):</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.error(<span class="string">"write to %s error: %s"</span> %(DestTable, e))</span><br><span class="line">            error = <span class="number">1</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">return</span> error</span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(line)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        SQL = <span class="string">"SELECT top %d * from %s;"</span> % (line, SourceTable)</span><br><span class="line">        logging.info(SQL)</span><br><span class="line">        rows = cursor_s.execute(SQL).fetchall()</span><br><span class="line">        <span class="keyword">return</span> rows</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        logging.error(<span class="string">'read from %s error: %s'</span>%(SourceTable, e))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#count the dest table,decide the place begin to copy</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_s</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        SQL = <span class="string">"SELECT count(*) from %s;"</span> % SourceTable</span><br><span class="line">        lines = cursor_s.execute(SQL).fetchone()</span><br><span class="line">        logging.info(<span class="string">'%s %s count is %d'</span> %(SourceDatabase, SourceTable, lines[<span class="number">0</span>]))</span><br><span class="line">        <span class="keyword">return</span> lines</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        logging.error(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_d</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        SQL = <span class="string">"SELECT count(*) from %s;"</span> % DestTable</span><br><span class="line">        lines = cursor_d.execute(SQL).fetchone()</span><br><span class="line">        logging.info(<span class="string">'%s %s count is %d'</span> %(DestDatabase, DestTable, lines[<span class="number">0</span>]))</span><br><span class="line">        <span class="keyword">return</span> lines</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        logging.error(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">databaseCopy</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> conn_s</span><br><span class="line">    <span class="keyword">global</span> conn_d</span><br><span class="line">    <span class="keyword">global</span> cursor_s</span><br><span class="line">    <span class="keyword">global</span> cursor_d</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        conn_s = pyodbc.connect(<span class="string">r"Driver=&#123;Microsoft Access Driver (*.mdb, *.accdb)&#125;;DBQ="</span> + SourceDatabase + <span class="string">";Uid=;Pwd=;"</span>)</span><br><span class="line">        conn_d = pyodbc.connect(<span class="string">r"Driver=&#123;Microsoft Access Driver (*.mdb, *.accdb)&#125;;DBQ="</span> + DestDatabase + <span class="string">";Uid=;Pwd=;"</span>) </span><br><span class="line">        cursor_s = conn_s.cursor()</span><br><span class="line">        cursor_d = conn_d.cursor()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        lines_s = count_s()</span><br><span class="line">        <span class="keyword">if</span>(lines_s == <span class="literal">None</span>):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        lines_d = count_d()</span><br><span class="line">        <span class="keyword">if</span>(lines_d == <span class="literal">None</span>):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        rows = read(lines_s[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span>(rows == <span class="literal">None</span>):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lines_s == lines_d):</span><br><span class="line">            logging.info(<span class="string">'source database %s table %s not change, no need to copy'</span> %(SourceDatabase ,SourceTable))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.info(<span class="string">'rows: %d'</span> % len(rows))</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, lines_s[<span class="number">0</span>]<span class="number">-1</span>):</span><br><span class="line">                error = write(rows[i])</span><br><span class="line">                <span class="keyword">if</span> error:</span><br><span class="line">                    logging.info(<span class="string">'rows:%d  %s'</span> %(i, rows[i]))</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        logging.error(e)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> SourceDatabase</span><br><span class="line">    <span class="keyword">global</span> SourceTable</span><br><span class="line">    <span class="keyword">global</span> DestDatabase</span><br><span class="line">    <span class="keyword">global</span> DestTable</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        opts, args = getopt.getopt(sys.argv[<span class="number">1</span>:],<span class="string">"h"</span>,[<span class="string">"help"</span>,<span class="string">"sd="</span>,<span class="string">"st="</span>,<span class="string">"dd="</span>, <span class="string">"dt="</span>])</span><br><span class="line">    <span class="keyword">except</span> getopt.GetoptError <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        help()</span><br><span class="line">        sys.exit(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> opt, arg <span class="keyword">in</span> opts:</span><br><span class="line">        <span class="keyword">if</span> opt <span class="keyword">in</span> (<span class="string">'-h'</span>, <span class="string">'--help'</span>):</span><br><span class="line">            help()</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">elif</span> opt == <span class="string">'--sd'</span>:</span><br><span class="line">            SourceDatabase = arg</span><br><span class="line">        <span class="keyword">elif</span> opt == <span class="string">'--st'</span>:</span><br><span class="line">            SourceTable = arg</span><br><span class="line">        <span class="keyword">elif</span> opt == <span class="string">'--dd'</span>:</span><br><span class="line">            DestDatabase = arg</span><br><span class="line">        <span class="keyword">elif</span> opt == <span class="string">'--dt'</span>:</span><br><span class="line">            DestTable = arg</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            print(<span class="string">'error %s %s'</span> %(opt, arg) )</span><br><span class="line">            help()</span><br><span class="line">            sys.exit(<span class="number">2</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (SourceDatabase  <span class="keyword">and</span> SourceTable <span class="keyword">and</span> DestDatabase <span class="keyword">and</span> DestTable):</span><br><span class="line">        databaseCopy()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'some empty %s %s %s %s'</span> % (SourceDatabase, SourceTable, DestDatabase, DestTable))</span><br><span class="line">        help()</span><br><span class="line">        sys.exit(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    count_s()</span><br><span class="line">    count_d()</span><br><span class="line">    conn_s.close()</span><br><span class="line">    conn_d.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">help</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'---------------------------------'</span>)</span><br><span class="line">    print(<span class="string">'usage:'</span>)</span><br><span class="line">    print(<span class="string">'help: %s -h'</span> % sys.argv[<span class="number">0</span>])</span><br><span class="line">    print(<span class="string">'%s --sd=&lt;SourceDatabase&gt; --st=&lt;SourceTable&gt; --dd=&lt;DestDatabase&gt; --dt=&lt;DestTable&gt;'</span> % sys.argv[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>使用方法：<br>可以将下面的代码保存为bat文件，自行替换 –sd –st –dd –dt 的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python access_copy.py --sd=&quot;\\192.168.1.112\Users\eagle\Desktop\Database31.accdb&quot; --st=xuesheng --dd=&quot;C:\Users\eagle\Desktop\Database31.accdb&quot; --dt=xuesheng</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>access数据库的复制支持通过共享文件夹的方式读取远程的数据库。  </li></ul><h2 id="access-数据库的问题："><a href="#access-数据库的问题：" class="headerlink" title="access 数据库的问题："></a>access 数据库的问题：</h2><p>假设程序A对A数据库执行写入操作，程序B读取A数据库中的数据写入B库。  </p><ol><li>如果执行select*那么程序会一直写入，直到A库的写操作完成。</li><li>如果想写入程序执行时A数据库的数据的条数，需加上top限制，但是不能保证读出数据的次序。</li><li>加上 order by 后会死等，直到程序A的写操作完成，B程序才开始执行写操作。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说明：建立两个连接是因为，只使用一个连接时会出现以下错误：&lt;br&gt;[24000] [Microsoft][ODBC Microsoft Access Driver]Invalid cursor state  (43) (SQLExecDirectW)  &lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://bruceeezhao.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://bruceeezhao.github.io/tags/Python/"/>
    
      <category term="Access数据库" scheme="https://bruceeezhao.github.io/tags/Access%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
